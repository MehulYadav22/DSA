//In this program we are sorting 0's, 1's, 2's  
//T.C=o(n)
//S.C=o(1)


#include<bits/stdc++.h>
using namespace std;
class Node{
    public:
    int data;
    Node* next;

    //constructor
    Node(int data)
    {
        this ->data = data;
        this ->next = NULL;
    }
   
};
void insertAtHead(Node* &head,Node* &tail, int d)
{
    //empty list
    if(head==NULL)
    {
        Node* temp=new Node(d);
        head=temp;
        tail=temp;
    }
    else
    {
        // Create new node
    Node* temp= new Node(d);
    temp-> next=head;
    head=temp;

    }
    
}



void insertAtTail(Node* &tail,Node* &head, int d)
{
    if(tail==NULL)
    {
        Node* temp=new Node(d);
        head=temp;
        tail=temp;
    }
    else
    {
        //create new node
    Node* temp= new Node(d);
    tail ->next=temp;
    tail= temp;
    }
}
Node* sortList(Node* &head)
{
    int zeroCount=0;
    int oneCount=0;
    int twoCount=0;
    Node* temp=head;
    while(temp!=NULL)
    {
        if(temp->data==0)
        {
            zeroCount++;
        }
        else if(temp->data==1)
        {
            oneCount++;
        }
        else if(temp->data==2)
        {
            twoCount++;
        }
        temp=temp->next;
    }
    temp=head;
    while(temp!=NULL)
    {
        if(zeroCount!=0)
        {
            temp->data=0;
            zeroCount--;
        }
        else if(oneCount!=0)
        {
            temp->data=1;
            oneCount--;
        }
        else if(twoCount!=0)
        {
            temp->data=2;
            twoCount;
        }
        temp=temp->next;
    }
    return head;

}



void print(Node* &head)
{
    Node* start=head;
    while(start!=NULL)
    {
        cout<< start-> data<<" ";
        start=start->next;
    }
    cout<<endl;
}
int main()
{
    Node* head=NULL;
    Node* tail=NULL;

    insertAtTail(tail,head,1);
    insertAtTail(tail,head,0);
    insertAtTail(tail,head,2);
    insertAtTail(tail,head,1);
    insertAtTail(tail,head,2);
    print(head);
    Node* start=sortList(head);
    print(start);
    
}



